// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: register.proto

#ifndef PROTOBUF_INCLUDED_register_2eproto
#define PROTOBUF_INCLUDED_register_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_register_2eproto 

namespace protobuf_register_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_register_2eproto
namespace protobufMsg {
class Register_CS;
class Register_CSDefaultTypeInternal;
extern Register_CSDefaultTypeInternal _Register_CS_default_instance_;
class Register_SC;
class Register_SCDefaultTypeInternal;
extern Register_SCDefaultTypeInternal _Register_SC_default_instance_;
}  // namespace protobufMsg
namespace google {
namespace protobuf {
template<> ::protobufMsg::Register_CS* Arena::CreateMaybeMessage<::protobufMsg::Register_CS>(Arena*);
template<> ::protobufMsg::Register_SC* Arena::CreateMaybeMessage<::protobufMsg::Register_SC>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protobufMsg {

// ===================================================================

class Register_CS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobufMsg.Register_CS) */ {
 public:
  Register_CS();
  virtual ~Register_CS();

  Register_CS(const Register_CS& from);

  inline Register_CS& operator=(const Register_CS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Register_CS(Register_CS&& from) noexcept
    : Register_CS() {
    *this = ::std::move(from);
  }

  inline Register_CS& operator=(Register_CS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Register_CS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Register_CS* internal_default_instance() {
    return reinterpret_cast<const Register_CS*>(
               &_Register_CS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Register_CS* other);
  friend void swap(Register_CS& a, Register_CS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Register_CS* New() const final {
    return CreateMaybeMessage<Register_CS>(NULL);
  }

  Register_CS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Register_CS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Register_CS& from);
  void MergeFrom(const Register_CS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Register_CS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accountId = 1;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  const ::std::string& accountid() const;
  void set_accountid(const ::std::string& value);
  #if LANG_CXX11
  void set_accountid(::std::string&& value);
  #endif
  void set_accountid(const char* value);
  void set_accountid(const char* value, size_t size);
  ::std::string* mutable_accountid();
  ::std::string* release_accountid();
  void set_allocated_accountid(::std::string* accountid);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string mobilephone = 3;
  void clear_mobilephone();
  static const int kMobilephoneFieldNumber = 3;
  const ::std::string& mobilephone() const;
  void set_mobilephone(const ::std::string& value);
  #if LANG_CXX11
  void set_mobilephone(::std::string&& value);
  #endif
  void set_mobilephone(const char* value);
  void set_mobilephone(const char* value, size_t size);
  ::std::string* mutable_mobilephone();
  ::std::string* release_mobilephone();
  void set_allocated_mobilephone(::std::string* mobilephone);

  // string email = 4;
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string pwd = 6;
  void clear_pwd();
  static const int kPwdFieldNumber = 6;
  const ::std::string& pwd() const;
  void set_pwd(const ::std::string& value);
  #if LANG_CXX11
  void set_pwd(::std::string&& value);
  #endif
  void set_pwd(const char* value);
  void set_pwd(const char* value, size_t size);
  ::std::string* mutable_pwd();
  ::std::string* release_pwd();
  void set_allocated_pwd(::std::string* pwd);

  // int32 sex = 5;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobufMsg.Register_CS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mobilephone_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr pwd_;
  ::google::protobuf::int32 sex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_register_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Register_SC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobufMsg.Register_SC) */ {
 public:
  Register_SC();
  virtual ~Register_SC();

  Register_SC(const Register_SC& from);

  inline Register_SC& operator=(const Register_SC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Register_SC(Register_SC&& from) noexcept
    : Register_SC() {
    *this = ::std::move(from);
  }

  inline Register_SC& operator=(Register_SC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Register_SC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Register_SC* internal_default_instance() {
    return reinterpret_cast<const Register_SC*>(
               &_Register_SC_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Register_SC* other);
  friend void swap(Register_SC& a, Register_SC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Register_SC* New() const final {
    return CreateMaybeMessage<Register_SC>(NULL);
  }

  Register_SC* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Register_SC>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Register_SC& from);
  void MergeFrom(const Register_SC& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Register_SC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobufMsg.Register_SC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_register_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Register_CS

// string accountId = 1;
inline void Register_CS::clear_accountid() {
  accountid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Register_CS::accountid() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.accountId)
  return accountid_.GetNoArena();
}
inline void Register_CS::set_accountid(const ::std::string& value) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.accountId)
}
#if LANG_CXX11
inline void Register_CS::set_accountid(::std::string&& value) {
  
  accountid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobufMsg.Register_CS.accountId)
}
#endif
inline void Register_CS::set_accountid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobufMsg.Register_CS.accountId)
}
inline void Register_CS::set_accountid(const char* value, size_t size) {
  
  accountid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobufMsg.Register_CS.accountId)
}
inline ::std::string* Register_CS::mutable_accountid() {
  
  // @@protoc_insertion_point(field_mutable:protobufMsg.Register_CS.accountId)
  return accountid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Register_CS::release_accountid() {
  // @@protoc_insertion_point(field_release:protobufMsg.Register_CS.accountId)
  
  return accountid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Register_CS::set_allocated_accountid(::std::string* accountid) {
  if (accountid != NULL) {
    
  } else {
    
  }
  accountid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountid);
  // @@protoc_insertion_point(field_set_allocated:protobufMsg.Register_CS.accountId)
}

// string name = 2;
inline void Register_CS::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Register_CS::name() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.name)
  return name_.GetNoArena();
}
inline void Register_CS::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.name)
}
#if LANG_CXX11
inline void Register_CS::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobufMsg.Register_CS.name)
}
#endif
inline void Register_CS::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobufMsg.Register_CS.name)
}
inline void Register_CS::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobufMsg.Register_CS.name)
}
inline ::std::string* Register_CS::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protobufMsg.Register_CS.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Register_CS::release_name() {
  // @@protoc_insertion_point(field_release:protobufMsg.Register_CS.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Register_CS::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobufMsg.Register_CS.name)
}

// string mobilephone = 3;
inline void Register_CS::clear_mobilephone() {
  mobilephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Register_CS::mobilephone() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.mobilephone)
  return mobilephone_.GetNoArena();
}
inline void Register_CS::set_mobilephone(const ::std::string& value) {
  
  mobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.mobilephone)
}
#if LANG_CXX11
inline void Register_CS::set_mobilephone(::std::string&& value) {
  
  mobilephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobufMsg.Register_CS.mobilephone)
}
#endif
inline void Register_CS::set_mobilephone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobufMsg.Register_CS.mobilephone)
}
inline void Register_CS::set_mobilephone(const char* value, size_t size) {
  
  mobilephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobufMsg.Register_CS.mobilephone)
}
inline ::std::string* Register_CS::mutable_mobilephone() {
  
  // @@protoc_insertion_point(field_mutable:protobufMsg.Register_CS.mobilephone)
  return mobilephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Register_CS::release_mobilephone() {
  // @@protoc_insertion_point(field_release:protobufMsg.Register_CS.mobilephone)
  
  return mobilephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Register_CS::set_allocated_mobilephone(::std::string* mobilephone) {
  if (mobilephone != NULL) {
    
  } else {
    
  }
  mobilephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mobilephone);
  // @@protoc_insertion_point(field_set_allocated:protobufMsg.Register_CS.mobilephone)
}

// string email = 4;
inline void Register_CS::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Register_CS::email() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.email)
  return email_.GetNoArena();
}
inline void Register_CS::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.email)
}
#if LANG_CXX11
inline void Register_CS::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobufMsg.Register_CS.email)
}
#endif
inline void Register_CS::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobufMsg.Register_CS.email)
}
inline void Register_CS::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobufMsg.Register_CS.email)
}
inline ::std::string* Register_CS::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:protobufMsg.Register_CS.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Register_CS::release_email() {
  // @@protoc_insertion_point(field_release:protobufMsg.Register_CS.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Register_CS::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:protobufMsg.Register_CS.email)
}

// int32 sex = 5;
inline void Register_CS::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 Register_CS::sex() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.sex)
  return sex_;
}
inline void Register_CS::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.sex)
}

// string pwd = 6;
inline void Register_CS::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Register_CS::pwd() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_CS.pwd)
  return pwd_.GetNoArena();
}
inline void Register_CS::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobufMsg.Register_CS.pwd)
}
#if LANG_CXX11
inline void Register_CS::set_pwd(::std::string&& value) {
  
  pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobufMsg.Register_CS.pwd)
}
#endif
inline void Register_CS::set_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobufMsg.Register_CS.pwd)
}
inline void Register_CS::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobufMsg.Register_CS.pwd)
}
inline ::std::string* Register_CS::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:protobufMsg.Register_CS.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Register_CS::release_pwd() {
  // @@protoc_insertion_point(field_release:protobufMsg.Register_CS.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Register_CS::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:protobufMsg.Register_CS.pwd)
}

// -------------------------------------------------------------------

// Register_SC

// int32 code = 1;
inline void Register_SC::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Register_SC::code() const {
  // @@protoc_insertion_point(field_get:protobufMsg.Register_SC.code)
  return code_;
}
inline void Register_SC::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:protobufMsg.Register_SC.code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobufMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_register_2eproto
